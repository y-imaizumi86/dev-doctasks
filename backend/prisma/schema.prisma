generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  project_id    Int           @id @default(autoincrement()) @db.Integer
  name          String        @unique @db.VarChar(255)
  description   String?
  created_at    DateTime      @default(now()) @db.Timestamptz(6)
  created_by    Int           @db.Integer
  updated_at    DateTime      @default(now()) @db.Timestamptz(6)
  updated_by    Int           @db.Integer
  boards        Board[]
  labels        Label[]
  project_users ProjectUser[]
}

model Board {
  board_id    Int         @id @default(autoincrement()) @db.Integer
  project_id  Int         @db.Integer
  title       String      @db.VarChar(255)
  color_id    Int         @db.Integer
  created_at  DateTime    @default(now()) @db.Timestamptz(6)
  created_by  Int         @db.Integer
  updated_at  DateTime    @default(now()) @db.Timestamptz(6)
  updated_by  Int         @db.Integer
  project     Project     @relation(fields: [project_id], references: [project_id])
  board_users BoardUser[]
  lists       List[]
}

model List {
  list_id    Int      @id @default(autoincrement()) @db.Integer
  board_id   Int      @db.Integer
  title      String   @db.VarChar(255)
  position   Int      @db.Integer
  created_at DateTime @default(now()) @db.Timestamptz(6)
  created_by Int      @db.Integer
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  updated_by Int      @db.Integer
  cards      Card[]
  board      Board    @relation(fields: [board_id], references: [board_id])
}

model Card {
  card_id     Int         @id @default(autoincrement()) @db.Integer
  list_id     Int         @db.Integer
  title       String      @db.VarChar(255)
  description String?
  position    Int         @db.Integer
  due_date    DateTime?   @db.Timestamptz(6)
  created_at  DateTime    @default(now()) @db.Timestamptz(6)
  created_by  Int         @db.Integer
  updated_at  DateTime    @default(now()) @db.Timestamptz(6)
  updated_by  Int         @db.Integer
  list        List        @relation(fields: [list_id], references: [list_id])
  card_labels CardLabel[]
  card_users  CardUser[]
  checklists  Checklist[]
}

model Label {
  label_id    Int         @id @default(autoincrement()) @db.Integer
  project_id  Int         @db.Integer
  name        String      @db.VarChar(50)
  color_id    Int         @db.Integer
  created_at  DateTime    @default(now()) @db.Timestamptz(6)
  created_by  Int         @db.Integer
  updated_at  DateTime    @default(now()) @db.Timestamptz(6)
  updated_by  Int         @db.Integer
  card_labels CardLabel[]
  project     Project     @relation(fields: [project_id], references: [project_id])

  @@unique([project_id, name])
}

model Checklist {
  checklist_id Int             @id @default(autoincrement()) @db.Integer
  card_id      Int             @db.Integer
  name         String          @db.VarChar(50)
  position     Int             @db.Integer
  created_at   DateTime        @default(now()) @db.Timestamptz(6)
  created_by   Int             @db.Integer
  updated_at   DateTime        @default(now()) @db.Timestamptz(6)
  updated_by   Int             @db.Integer
  card         Card            @relation(fields: [card_id], references: [card_id])
  items        ChecklistItem[]
}

model ChecklistItem {
  checklist_item_id Int       @id @default(autoincrement()) @db.Integer
  checklist_id      Int       @db.Integer
  title             String    @db.VarChar(255)
  is_completed      Boolean   @default(false)
  position          Int       @db.Integer
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  created_by        Int       @db.Integer
  updated_at        DateTime  @default(now()) @db.Timestamptz(6)
  updated_by        Int       @db.Integer
  checklist         Checklist @relation(fields: [checklist_id], references: [checklist_id])
}

model User {
  user_id         Int           @id @default(autoincrement()) @db.Integer
  name            String        @db.VarChar(50)
  email           String        @unique @db.VarChar(255)
  hashed_password String        @db.VarChar(255)
  role_id         Int           @db.Integer
  color_id        Int           @db.Integer
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime      @default(now()) @db.Timestamptz(6)
  board_users     BoardUser[]
  card_users      CardUser[]
  project_users   ProjectUser[]
  color           Color         @relation(fields: [color_id], references: [color_id])
  role            UserRole      @relation(fields: [role_id], references: [role_id])
}

model UserRole {
  role_id Int    @id @db.Integer
  name    String @db.VarChar(50)
  users   User[]
}

model Color {
  color_id Int    @id @db.Integer
  name     String @db.VarChar(50)
  users    User[]
}

model ProjectUser {
  project_user_id Int     @id @default(autoincrement()) @db.Integer
  project_id      Int     @db.Integer
  user_id         Int     @db.Integer
  project         Project @relation(fields: [project_id], references: [project_id])
  user            User    @relation(fields: [user_id], references: [user_id])

  @@unique([project_id, user_id])
}

model BoardUser {
  board_user_id Int   @id @default(autoincrement()) @db.Integer
  board_id      Int   @db.Integer
  user_id       Int   @db.Integer
  board         Board @relation(fields: [board_id], references: [board_id])
  user          User  @relation(fields: [user_id], references: [user_id])

  @@unique([board_id, user_id])
}

model CardUser {
  card_user_id Int  @id @default(autoincrement()) @db.Integer
  card_id      Int  @db.Integer
  user_id      Int  @db.Integer
  card         Card @relation(fields: [card_id], references: [card_id])
  user         User @relation(fields: [user_id], references: [user_id])

  @@unique([card_id, user_id])
}

model CardLabel {
  card_label_id Int   @id @default(autoincrement()) @db.Integer
  card_id       Int   @db.Integer
  label_id      Int   @db.Integer
  card          Card  @relation(fields: [card_id], references: [card_id])
  label         Label @relation(fields: [label_id], references: [label_id])

  @@unique([card_id, label_id])
}
